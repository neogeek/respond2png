#!/bin/bash

VERSION=0.3

REDON=$(tput setaf 1)
GREENON=$(tput setaf 2)
COLOROFF=$(tput sgr0)

IOS=false
ANDROID=false

LANDSCAPE=false
RETINA=false

OUTPUT="screenshot"

checkRequirements() {

    if ! hash webkit2png &> /dev/null; then

        printf "%swebkit2png was not found.%s Please install to continue. http://www.paulhammond.org/webkit2png/\n" "$REDON" "$COLOROFF"

        exit

    fi

}

displayVersion() {

    echo "respond2png $VERSION"

}

displayHelp() {

    printf "Usage: respond2png [options] [http://localhost/]\n\n"

    echo "OPTIONS:"
    echo "   -v, --version             show the version number and then exit"
    echo "   -h, --help                show this help message and then exit"
    echo ""
    echo "   -i, --ios                 create iOS device sizes"
    echo "   -a, --android             create Android device sizes"
    echo ""
    echo "   -l, --landscape           create landscape versions"
    echo "   -r, --retina              create retina versions"
    echo ""
    echo "   -o=name, --output=name    change name of saved files"

}

parseOptions() {

    local args=(${@// /})

    for arg in "${args[@]}"
    do

        case $arg in

            -v | --version ) displayVersion; exit;;
            -h | --help ) displayHelp; exit;;

            -i | --ios ) IOS=true;;
            -a | --android ) ANDROID=true;;

            -l | --landscape ) LANDSCAPE=true;;
            -r | --retina ) RETINA=true;;

            -o=* | --output=* ) OUTPUT=$(echo "$arg" | sed -e 's/-o=//' -e "s/--output=//");;

            http* ) URL=$arg;;

            ?* ) echo "Invalid option $arg"; displayHelp; exit;;

        esac

    done

}

saveScreenshot() {

    webkit2png --scale=1 --width "$1" --fullsize -o "$OUTPUT-$2" "$URL" &> /dev/null

    printf "Saved ${REDON}%s${COLOROFF} screenshot to ${REDON}%s${COLOROFF}\n" "$2" "$OUTPUT"-"$2"

    if $RETINA; then

        webkit2png --scale=1 --zoom 2.0 --width "$1" --fullsize -o "$OUTPUT-$2-@2x" "$URL" &> /dev/null

        printf "Saved ${REDON}%s${COLOROFF} (@2x) screenshot to ${REDON}%s${COLOROFF}\n" "$2" "$OUTPUT"-"$2"-@2x

    fi

}

checkRequirements

parseOptions "$@"

if [ "$URL" ]; then

    if $IOS; then

        saveScreenshot "320" "iPhone4-Portrait"

        if $LANDSCAPE; then
            saveScreenshot "480" "iPhone4-Landscape"
        fi

        saveScreenshot "320" "iPhone5-Portrait"

        if $LANDSCAPE; then
            saveScreenshot "568" "iPhone5-Landscape"
        fi

        saveScreenshot "768" "iPad-Portrait"

        if $LANDSCAPE; then
            saveScreenshot "1024" "iPad-Landscape"
        fi

    fi

    if $ANDROID; then

        saveScreenshot "360" "Nexus5-Portrait"

        if $LANDSCAPE; then
            saveScreenshot "640" "Nexus5-Landscape"
        fi

        saveScreenshot "600" "Nexus7-Portrait"

        if $LANDSCAPE; then
            saveScreenshot "960" "Nexus7-Landscape"
        fi

        saveScreenshot "800" "Nexus10-Portrait"

        if $LANDSCAPE; then
            saveScreenshot "1280" "Nexus10-Landscape"
        fi

    fi

    saveScreenshot "1440" "Desktop"

    echo "Completed at ${GREENON}$(date +"%m-%d-%Y %r")${COLOROFF}"

else

    displayHelp

fi
